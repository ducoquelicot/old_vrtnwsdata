{"ast":null,"code":"import _classCallCheck from\"/Users/fmeijer/Desktop/vrtnws_data/essence/simulation/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/fmeijer/Desktop/vrtnws_data/essence/simulation/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/fmeijer/Desktop/vrtnws_data/essence/simulation/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/fmeijer/Desktop/vrtnws_data/essence/simulation/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Human from'../../generators/Human';import Citizen from'../Citizen';import Narrator from'../Narrator';import styles from'./style';import Titles from'../Titles';import Bars from'../Bars';var Simulation=/*#__PURE__*/function(_React$PureComponent){_inherits(Simulation,_React$PureComponent);var _super=_createSuper(Simulation);function Simulation(props){var _this;_classCallCheck(this,Simulation);_this=_super.call(this,props);_this.citizenAmount=100;_this.durationPhase1=15000;// ms\n_this.durationPhase2=10000;// ms\n// this.durationPhase3 = 10000; // ms\n_this.delayBetweenPhases=5000;//ms\n_this.state={citizens:[],phase:1,duration:_this.durationPhase1,percentageWhite:0,percentageBlack:0};return _this;}_createClass(Simulation,[{key:\"componentDidMount\",value:function componentDidMount(){this.generatePopulation();this.startPhaseCountdown();// this.restartViz();\n}},{key:\"startPhaseCountdown\",value:function startPhaseCountdown(){var _this2=this;var delayPhase2=this.durationPhase1+this.delayBetweenPhases;setTimeout(function(){console.log(_this2.state.citizens);var countWhite=_this2.state.citizens.filter(function(citizen){return citizen.control&&citizen.guilty&&citizen.skinTone==='white';}).length;var countBlack=_this2.state.citizens.filter(function(citizen){return citizen.control&&citizen.guilty&&citizen.skinTone==='black';}).length;var totalGuilty=_this2.state.citizens.filter(function(citizen){return citizen.control&&citizen.guilty;}).length;var percentageWhite=countWhite/totalGuilty*100;var percentageBlack=countBlack/totalGuilty*100;_this2.setState({duration:_this2.durationPhase2,phase:2,percentageWhite:percentageWhite,percentageBlack:percentageBlack});},delayPhase2);}// restartViz() {\n//   const totalDuration = this.durationPhase1 + this.delayBetweenPhases + this.durationPhase2 + 1000;\n//   setInterval(() => {\n//     this.setState = ({\n//       citizens: [],\n//       phase: 1,\n//       duration: this.durationPhase1,\n//       percentageWhite: 0,\n//       percentageBlack: 0,\n//     });\n//   }, totalDuration);\n//   this.generatePopulation();\n//   this.startPhaseCountdown();\n// }\n},{key:\"generatePopulation\",value:function generatePopulation(){var population=[];for(var index=0;index<this.citizenAmount;index++){population.push(new Human({index:index}));}this.setState({citizens:population});}},{key:\"renderCitizens\",value:function renderCitizens(){var _this$state=this.state,citizens=_this$state.citizens,duration=_this$state.duration,phase=_this$state.phase;var whiteCount=0;var blackCount=0;return citizens.map(function(citizen,i,arr){// scenario 3\n// const previous = arr[i-1]\n// if (citizen.skinTone === 'white') {\n//   var controlChance = () => Math.random() >= 0.8;\n//   citizen.control = controlChance();\n// }\n// else if (previous === undefined && citizen.skinTone === 'black') {\n//   controlChance = () => Math.random() >= 0.2;\n//   citizen.control = controlChance();\n// }\n// else if (previous.skinTone === 'black' && citizen.skinTone === 'black') {\n//   controlChance = () => Math.random() >= 0.1;\n//   citizen.control = controlChance();\n// }\n// else if (previous.skinTone === 'white' && citizen.skinTone === 'black') {\n//   controlChance = () => Math.random() >= 0.2;\n//   citizen.control = controlChance();\n// }\nwhiteCount=citizen.skinTone==='white'&&citizen.control?whiteCount+1:whiteCount;blackCount=citizen.skinTone==='black'&&citizen.control?blackCount+1:blackCount;return/*#__PURE__*/React.createElement(Citizen,{key:citizen.index,index:citizen.index,duration:duration,phase:phase,skinTone:citizen.skinTone,guilty:citizen.guilty,name:citizen.name,count:citizen.skinTone==='white'?whiteCount:blackCount,control:citizen.control});});}},{key:\"render\",value:function render(){var _this$state2=this.state,duration=_this$state2.duration,phase=_this$state2.phase,percentageBlack=_this$state2.percentageBlack,percentageWhite=_this$state2.percentageWhite;var citizens=this.renderCitizens();console.log(this.state);return/*#__PURE__*/React.createElement(\"svg\",{style:styles.svg,viewBox:\"0 0 800 500\"},citizens,/*#__PURE__*/React.createElement(Narrator,{phase:phase,duration:duration}),/*#__PURE__*/React.createElement(Titles,{phase:phase,duration:duration}),/*#__PURE__*/React.createElement(Bars,{phase:phase,duration:duration,percentageWhite:percentageWhite,percentageBlack:percentageBlack}));}}]);return Simulation;}(React.PureComponent);export{Simulation as default};","map":{"version":3,"sources":["/Users/fmeijer/Desktop/vrtnws_data/essence/simulation/frontend/src/components/Simulation/index.js"],"names":["React","Human","Citizen","Narrator","styles","Titles","Bars","Simulation","props","citizenAmount","durationPhase1","durationPhase2","delayBetweenPhases","state","citizens","phase","duration","percentageWhite","percentageBlack","generatePopulation","startPhaseCountdown","delayPhase2","setTimeout","console","log","countWhite","filter","citizen","control","guilty","skinTone","length","countBlack","totalGuilty","setState","population","index","push","whiteCount","blackCount","map","i","arr","name","renderCitizens","svg","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Human from '../../generators/Human';\nimport Citizen from '../Citizen';\nimport Narrator from '../Narrator';\nimport styles from './style';\nimport Titles from '../Titles';\nimport Bars from '../Bars';\n\nexport default class Simulation extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.citizenAmount = 100;\n    this.durationPhase1 = 15000; // ms\n    this.durationPhase2 = 10000; // ms\n    // this.durationPhase3 = 10000; // ms\n    this.delayBetweenPhases = 5000; //ms\n\n    this.state = {\n      citizens: [],\n      phase: 1,\n      duration: this.durationPhase1,\n      percentageWhite: 0,\n      percentageBlack: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.generatePopulation();\n    this.startPhaseCountdown();\n    // this.restartViz();\n  }\n\n  startPhaseCountdown() {\n    const delayPhase2 = this.durationPhase1 + this.delayBetweenPhases;\n\n    setTimeout(() => {\n      console.log(this.state.citizens)\n      const countWhite = this.state.citizens.filter(citizen => citizen.control && citizen.guilty && citizen.skinTone === 'white').length;\n      const countBlack = this.state.citizens.filter(citizen => citizen.control && citizen.guilty && citizen.skinTone === 'black').length;  \n\n      const totalGuilty = this.state.citizens.filter(citizen => citizen.control && citizen.guilty).length;\n\n      const percentageWhite = countWhite / totalGuilty * 100;\n      const percentageBlack = countBlack / totalGuilty * 100;\n\n      this.setState({ \n        duration: this.durationPhase2, \n        phase: 2,\n        percentageWhite,\n        percentageBlack,\n      });\n\n    }, delayPhase2);\n  }\n\n  // restartViz() {\n  //   const totalDuration = this.durationPhase1 + this.delayBetweenPhases + this.durationPhase2 + 1000;\n\n  //   setInterval(() => {\n  //     this.setState = ({\n  //       citizens: [],\n  //       phase: 1,\n  //       duration: this.durationPhase1,\n  //       percentageWhite: 0,\n  //       percentageBlack: 0,\n  //     });\n  //   }, totalDuration);\n\n  //   this.generatePopulation();\n  //   this.startPhaseCountdown();\n  // }\n\n  generatePopulation() {\n    const population = [];\n    for (let index = 0; index < this.citizenAmount; index++) {\n      population.push(new Human({ index }));\n    }\n    this.setState({ citizens: population });\n  }\n\n  renderCitizens() {\n    const { citizens, duration, phase } = this.state;\n\n    let whiteCount = 0\n    let blackCount = 0\n\n    return (\n      citizens.map((citizen, i, arr) => {\n        // scenario 3\n        // const previous = arr[i-1]\n\n        // if (citizen.skinTone === 'white') {\n        //   var controlChance = () => Math.random() >= 0.8;\n        //   citizen.control = controlChance();\n        // }\n        // else if (previous === undefined && citizen.skinTone === 'black') {\n        //   controlChance = () => Math.random() >= 0.2;\n        //   citizen.control = controlChance();\n        // }\n        // else if (previous.skinTone === 'black' && citizen.skinTone === 'black') {\n        //   controlChance = () => Math.random() >= 0.1;\n        //   citizen.control = controlChance();\n        // }\n        // else if (previous.skinTone === 'white' && citizen.skinTone === 'black') {\n        //   controlChance = () => Math.random() >= 0.2;\n        //   citizen.control = controlChance();\n        // }\n\n        whiteCount = citizen.skinTone === 'white' && citizen.control ? whiteCount + 1 : whiteCount\n        blackCount = citizen.skinTone === 'black' && citizen.control ? blackCount + 1 : blackCount\n        \n        return <Citizen\n          key={citizen.index}\n          index={citizen.index}\n          duration={duration}\n          phase={phase}\n          skinTone={citizen.skinTone}\n          guilty={citizen.guilty}\n          name={citizen.name}\n          count={citizen.skinTone === 'white' ? whiteCount : blackCount}\n          control={citizen.control}\n        />;\n      })\n    );\n  }\n\n  render() {\n    const { duration, phase, percentageBlack, percentageWhite } = this.state;\n    const citizens = this.renderCitizens();\n\n    console.log(this.state);\n    return (\n      <svg style={styles.svg} viewBox='0 0 800 500'>\n        {citizens}\n        <Narrator phase={phase} duration={duration} />\n        <Titles phase={phase} duration={duration} />\n        <Bars phase={phase} duration={duration} percentageWhite={percentageWhite} percentageBlack={percentageBlack} />\n      </svg>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}