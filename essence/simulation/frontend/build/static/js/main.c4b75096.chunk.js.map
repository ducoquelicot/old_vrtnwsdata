{"version":3,"sources":["generators/Human/numgen.js","generators/Human/index.js","components/Citizen/style.js","components/Citizen/index.js","components/Narrator/style.js","components/Narrator/index.js","components/Titles/style.js","components/Titles/index.js","components/Bars/style.js","components/Bars/index.js","components/Simulation/index.js","components/App/index.js","index.js"],"names":["rng","require","seedrandom","Human","properties","generateName","generateSkinTone","generateCrimes","this","index","name","skinTone","guilty","control","undefined","styles","circle","transition","transformOrigin","Citizen","props","references","citizen","React","createRef","state","xCoord","Math","round","random","yCoord","animate","phase","animatePhase1","animatePhase2","duration","timePerStep","delay","animationTime","d3","current","style","attr","count","rest","ceil","ref","cx","cy","r","stroke","fill","strokeWidth","PureComponent","text","textAnchor","fontSize","fontFamily","backgroundColor","text2","text3","text4","Narrator","text1","className","x","y","Titles","title1","title2","width","height","bar","transform","barContainer1","barContainer2","Bars","stats1","stats2","percentageWhite","percentageBlack","Simulation","citizenAmount","durationPhase1","durationPhase2","delayBetweenPhases","citizens","maxHeight","maxWidth","setSize","generatePopulation","startPhaseCountdown","console","log","window","innerWidth","setState","delayPhase2","setTimeout","countWhite","filter","length","countBlack","totalGuilty","population","push","whiteCount","blackCount","map","i","arr","previous","controlChance","key","renderCitizens","svg","flex","textAlign","verticalAlign","alignItems","margin","padding","boxSizing","viewBox","App","top","left","startSimulation","startSim","refresh","button","display","border","textDecoration","background","color","position","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4b75096.chunk.js","sourcesContent":["const seedrandom = require('seedrandom');\n\nconst rng = seedrandom('variabelen');\n\nexport default rng","import rng from './numgen'\n\nexport default class Human {\n  constructor(properties) {\n    this.index = properties.index;\n    this.name = this.generateName();\n    this.skinTone = this.generateSkinTone();\n    this.guilty = this.generateCrimes();\n    // this.control = this.generateChance();\n    this.control = undefined\n  }\n\n  generateName = () => 'Jon';\n  generateSkinTone = () => rng() >= 0.5 ? 'black' : 'white';\n  generateCrimes = () => rng() >= 0.5;\n\n  // scenario 1\n  // generateChance = () => Math.random() >= 0.5;\n\n  // scenario 2\n  // generateChance = function() {\n  //   if (this.skinTone === 'black') {\n  //     return Math.random() >= 0.3;\n  //   }\n  //   else {\n  //     return Math.random() >= 0.7;\n  //   }\n  // }\n\n}","const styles = {\n  circle: {\n    transition: 'all ease 1s',\n    transformOrigin: 'center',\n  }\n};\n\nexport default styles;","import React from 'react';\nimport * as d3 from 'd3';\nimport styles from './style';\n\nexport default class Citizen extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.references = { citizen: React.createRef() };\n\n    this.state = {\n      xCoord : `${Math.round(Math.random() * 90) + 5}%`,\n      yCoord : `${Math.round(Math.random() * 90) + 5}%`\n    }\n  }\n\n  componentDidMount() {\n    this.animate();\n  }\n\n  componentDidUpdate() {\n    this.animate();\n  }\n\n  animate() {\n    switch (this.props.phase) {\n      case 1:\n        this.animatePhase1();\n        break;\n      case 2:\n        this.animatePhase2();\n        break;\n      default:\n        this.animatePhase1();\n    }\n  }\n\n  animatePhase1() {\n    const { duration, index, skinTone, guilty } = this.props;\n    const steps = 4;\n    const timePerStep = duration / steps;\n    const delay = (timePerStep * 0.75) * (index / 100);\n    const animationTime = timePerStep * 0.25;\n\n    if (skinTone === 'white') {\n      d3.select(this.references.citizen.current)\n        .style('opacity', 0)\n        .transition()\n        .delay(timePerStep)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .style('opacity', 0.5);\n    }\n\n    if (skinTone === 'black') {\n      d3.select(this.references.citizen.current)\n        .style('opacity', 0)\n\n        .transition()\n        .delay(timePerStep * 2)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .style('opacity', 0.5);\n    }\n\n    if (guilty) {\n      d3.select(this.references.citizen.current)\n        .transition()\n        .delay(timePerStep * 3)\n        .transition()\n        .delay(delay)\n        .duration(animationTime * 2)\n        .style('stroke', '#FF4262')\n        .attr('stroke-width', 3)\n        .style('opacity', 0.5);\n    }\n\n    d3.select(this.references.citizen.current)\n      .transition()\n      .delay(duration)\n      .duration(animationTime)\n      .style('opacity', 0)\n  }\n\n\n  animatePhase2() {\n      const { skinTone, count, control } = this.props;\n      const rest = count%5;\n      const xCoord = skinTone === 'white' ? `${21 + rest * 5}%` : `${65 + rest * 5}%`;\n      const yCoord = `${Math.ceil(count/5) * 5 + 15}%`;\n\n      d3.select(this.references.citizen.current)\n      .style('opacity', 0)\n      \n      if (control) {\n        d3.select(this.references.citizen.current)\n        .transition()\n        .delay(700 * count)\n        .duration(1000)\n        .style('opacity', 1)\n        .attr('cx', xCoord)\n        .attr('cy', yCoord)\n      }\n  }\n\n  render() {\n    const { skinTone } = this.props;\n    const { xCoord, yCoord } = this.state;\n    return (\n      <circle ref={this.references.citizen} style={styles.circle}\n        cx={xCoord}\n        cy={yCoord}\n        r=\"10\"\n        stroke=\"#16284A\"\n        fill={skinTone === 'white' ? 'white' : '#16284A'}\n        strokeWidth=\"1\"\n      />\n    );\n  }\n}\n","const styles = {\n  text: {\n    textAnchor: 'middle',\n    fontSize: '1.8em',\n    fill: '#16284A',\n    fontFamily: 'Poppins',\n    backgroundColor: 'white',\n  },\n  text2: {\n    textAnchor: 'middle',\n    fontSize: '1.2em',\n    fill: '#16284A',\n    fontFamily: 'Poppins',\n  },\n  text3: {\n    textAnchor: 'middle',\n    fontSize: '1.2em',\n    fill: '#16284A',\n    fontFamily: 'Poppins',\n  },\n  text4: {\n    textAnchor: 'middle',\n    fontSize: '1.2em',\n    fill: '#16284A',\n    fontFamily: 'Poppins',\n  }\n};\n\nexport default styles;","import React from 'react';\nimport * as d3 from 'd3';\nimport styles from './style';\n\nexport default class Narrator extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.references = { text1: React.createRef(), text2: React.createRef(), text3: React.createRef(), text4: React.createRef() };\n  }\n\n  componentDidMount() {\n    this.animate();\n  }\n\n  componentDidUpdate() {\n    this.animate();\n  }\n\n  animate() {\n    switch (this.props.phase) {\n      case 1:\n        this.animatePhase1();\n        break;\n      case 2:\n        this.animatePhase2();\n        break;\n      default:\n        this.animatePhase1();\n    }\n  }\n\n  animatePhase1() {\n    const { duration} = this.props;\n    const steps = 4;\n    const timePerStep = duration / steps;\n    const delay = timePerStep * 0.5;\n    const animationTime = timePerStep * 0.25;\n\n    d3.select(this.references.text1.current)\n      .style('opacity', 0)\n\n      .transition()\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Een fictieve populatie van 100 mensen')\n      .transition()\n      .delay(delay)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n      .transition()\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Sommigen zijn wit')\n      .transition()\n      .delay(delay)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n      .transition()\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Sommigen zijn zwart')\n      .transition()\n      .delay(delay)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n      .transition()\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Sommigen zijn crimineel')\n      .transition()\n      .delay(delay)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n      // scenario 1\n      // .transition()\n      // .delay(delay)\n      // .duration(animationTime)\n      // .style('opacity', 1)\n      // .text('De politie controleert willekeurig.')\n      // .transition()\n      // .delay(delay)\n      // .duration(animationTime)\n      // .style('opacity', 0);\n\n      // scenario 2\n      // .transition()\n      // .delay(delay)\n      // .duration(animationTime)\n      // .style('opacity', 1)\n      // .text('De politie controleert vaker in \"zwarte\" buurten.')\n      // .transition()\n      // .delay(delay)\n      // .duration(animationTime)\n      // .style('opacity', 0);\n\n      // scenario 3\n      .transition()\n      .delay(delay)\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('De politie controleert vaker in \"zwarte\" buurten...')\n      .transition()\n      .delay(delay)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n      .transition()\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('...én is bevooroordeeld.')\n      .transition()\n      .delay(delay)\n      .duration(animationTime)\n      .style('opacity', 0);\n  }\n\n\n  animatePhase2() {\n    const { duration} = this.props;\n    const steps = 4;\n    const timePerStep = duration / steps;\n    const delay = timePerStep * 0.5;\n    const animationTime = timePerStep * 0.25;\n\n    d3.select(this.references.text2.current)\n      .style('opacity', 0)\n\n      .transition()\n      .delay(delay * 2)\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Dit zijn alle gecontroleerde mensen.')\n      .transition()\n      .delay(delay * 0.8)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n      .transition()\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('De politie telt het aantal criminelen van elke huidskleur.')\n      .transition()\n      .delay(delay * 0.8)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n      .transition()\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Dit is de totale verdeling van criminelen per huidskleur:')\n      .transition()\n      .delay(delay * 0.8)\n      .duration(animationTime)\n      .style('opacity', 0)\n\n    d3.select(this.references.text3.current)\n      .style('opacity', 0)\n\n      .transition()\n      .delay(delay * 8)\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Percentage witte criminelen')\n\n    d3.select(this.references.text4.current)\n      .style('opacity', 0)\n\n      .transition()\n      .delay(delay * 8)\n      .duration(animationTime)\n      .style('opacity', 1)\n      .text('Percentage zwarte criminelen')\n\n  }\n\n\n  render() {\n    return (\n      <g>\n        <text ref={this.references.text1} style={styles.text}\n          className='narrator'\n          x='50%'\n          y='50%'\n        />\n        <text ref={this.references.text2} style={styles.text2}\n          className='narrator'\n          x='50%'\n          y='50%'\n        />\n        <text ref={this.references.text3} style={styles.text3}\n          className='narrator'\n          x='26%'\n          y='85%'\n        />\n        <text ref={this.references.text4} style={styles.text4}\n          className='narrator'\n          x='81%'\n          y='85%'\n        />\n      </g>\n    );\n  }\n}\n","const styles = { \n    text : { \n        textAnchor: 'middle',\n        fontSize: '1.5em',\n        fill: '#16284A',\n        fontFamily: 'Poppins',\n    }\n}\n\nexport default styles","import React from 'react';\nimport * as d3 from 'd3';\nimport styles from \"./style.js\";\n\nexport default class Titles extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.references = { \n      title1: React.createRef(),\n      title2: React.createRef()\n    };\n  }\n\n  componentDidMount() {\n    this.animate();\n  }\n\n  componentDidUpdate() {\n    this.animate();\n  }\n\n  animate() {\n    switch (this.props.phase) {\n      case 1:\n        this.animatePhase1();\n        break;\n      case 2:\n        this.animatePhase2();\n        break;\n      default:\n        this.animatePhase1();\n    }\n  }\n\n  animatePhase1() {\n    d3.select(this.references.title1.current)\n      .style('opacity', 0)\n\n    d3.select(this.references.title2.current)\n    .style('opacity', 0)\n  }\n\n  animatePhase2() {\n    const { duration} = this.props;\n    const steps = 4;\n    const timePerStep = duration / steps;\n    const delay = timePerStep * 0.5;\n    const animationTime = timePerStep * 0.25;\n\n    d3.select(this.references.title1.current)\n    .transition()\n    .delay(delay)\n    .duration(animationTime)\n    .style('opacity', 1.0)\n\n    d3.select(this.references.title2.current)\n    .transition()\n    .delay(delay)\n    .duration(animationTime)\n    .style('opacity', 1.0)\n  }\n\n  render() {\n    return (\n      <g>\n      <text className='title' ref={this.references.title1}\n        x= \"30%\"\n        y= \"10%\"\n        width=\"50%\"\n        height=\"10%\"\n        style={styles.text}\n        >\n          Witte mensen\n        </text>\n\n      <text className='title' ref={this.references.title2}\n        x= \"75%\"\n        y= \"10%\"\n        width=\"50%\"\n        height=\"10%\"\n        style={styles.text}\n        >\n          Zwarte mensen\n        </text>\n      </g>\n    );\n  }\n}\n","const styles = { \n    bar : {\n        transform: 'translate(6%, 0) rotate(180deg)'\n    },\n    barContainer1 : {\n        transform: 'translate(46%, 90%)'\n    },\n    barContainer2 : {\n        transform: 'translate(54%, 90%)'\n    },\n    text : {\n        fontFamily: 'Poppins',\n        fontSize: '1em',\n        textAnchor: 'middle',\n        fill: 'white',\n        transform: 'translate(3%, 0)'\n    },\n    text2 : {\n        fontFamily: 'Poppins',\n        fontSize: '1em',\n        textAnchor: 'middle',\n        fill: '#16284A',\n        transform: 'translate(3%, 0)'\n    }\n\n}\n\nexport default styles","import React from 'react';\nimport * as d3 from 'd3';\nimport styles from './style';\n\nexport default class Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.references = { stats1: React.createRef(), stats2: React.createRef(), text1: React.createRef(), text2: React.createRef(), text3: React.createRef(), text4: React.createRef() };\n  }\n\n  componentDidMount() {\n    this.animate();\n  }\n\n  componentDidUpdate() {\n    this.animate();\n  }\n\n  animate() {\n    switch (this.props.phase) {\n      case 1:\n          this.animatePhase1();\n          break;\n      case 2:\n        this.animatePhase2();\n        break;\n      default:\n          // do nothing\n    }\n  }\n\n  animatePhase1() {\n    d3.select(this.references.text1.current)\n        .style('opacity', 0)\n    d3.select(this.references.text2.current)\n        .style('opacity', 0)\n    d3.select(this.references.text3.current)\n        .style('opacity', 0)\n    d3.select(this.references.text4.current)\n        .style('opacity', 0)\n  }\n\n  animatePhase2() {\n    const { duration, percentageWhite, percentageBlack } = this.props;\n    const steps = 4;\n    const timePerStep = duration / steps;\n    const delay = timePerStep * 0.5;\n    const animationTime = timePerStep * 0.25;\n    \n    d3.select(this.references.stats1.current)\n        .transition()\n        .delay(timePerStep * 3)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .attr('height', `${percentageWhite}%`)\n\n    d3.select(this.references.stats2.current)\n        .transition()\n        .delay(timePerStep * 3)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .attr('height', `${percentageBlack}%`)\n\n    d3.select(this.references.text1.current)\n        .transition()\n        .delay(timePerStep * 3)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .style('opacity', 1.0)\n\n    d3.select(this.references.text2.current)\n        .transition()\n        .delay(timePerStep * 3)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .style('opacity', 1.0)\n\n    d3.select(this.references.text3.current)\n        .transition()\n        .delay(timePerStep * 3)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .style('opacity', 1.0)\n\n    d3.select(this.references.text4.current)\n        .transition()\n        .delay(timePerStep * 3)\n        .transition()\n        .delay(delay)\n        .duration(animationTime)\n        .style('opacity', 1.0)\n  }\n\n  render() {\n    return (\n        <g>\n            <g style={styles.barContainer1}>\n                <rect ref={this.references.stats1} style={styles.bar}\n                    x='0'\n                    y='0'\n                    width='6%'\n                    height='0'\n                    fill='#2396CD'\n                    strokeWidth='0'\n                />\n                <text ref={this.references.text1} x='0' y='-1%' style={styles.text}>\n                    {Math.round(this.props.percentageWhite)}%\n                </text>\n                {/* <text className='bar' ref={this.references.text2} x='0' y='4%' style={styles.text2}>\n                    Wit\n                </text> */}\n            </g>\n            <g style={styles.barContainer2}>\n                <rect ref={this.references.stats2} style={styles.bar}\n                    x='0'\n                    y='0'\n                    width='6%'\n                    height='0'\n                    fill='#2396CD'\n                    strokeWidth='0'\n                />\n                <text ref={this.references.text3} x='0' y='-1%' style={styles.text}>\n                    {Math.round(this.props.percentageBlack)}%\n                </text>\n                {/* <text className='bar' ref={this.references.text4} x='0' y='4%' style={styles.text2}>\n                    Zwart\n                </text> */}\n            </g>\n        </g>\n    );\n  }\n}\n","import React from 'react';\nimport Human from '../../generators/Human';\nimport Citizen from '../Citizen';\nimport Narrator from '../Narrator';\n// import styles from './style';\nimport Titles from '../Titles';\nimport Bars from '../Bars';\n\nexport default class Simulation extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.citizenAmount = 100;\n    this.durationPhase1 = 15000; // ms\n    this.durationPhase2 = 10000; // ms\n    // this.durationPhase3 = 10000; // ms\n    this.delayBetweenPhases = 8000; //ms\n\n    this.state = {\n      citizens: [],\n      phase: 1,\n      duration: this.durationPhase1,\n      percentageWhite: 0,\n      percentageBlack: 0,\n      maxHeight: null,\n      maxWidth: null,\n    };\n  }\n\n  componentDidMount() {\n    this.setSize();\n    this.generatePopulation();\n    this.startPhaseCountdown();\n  }\n\n  setSize() {\n    console.log(window.innerWidth)\n    if (window.innerWidth < 768) {\n      this.setState({ maxHeight: '250px', maxWidth: '400px'})\n    }\n    else {\n      this.setState({ maxHeight: '500px', maxWidth: '800px'})\n    }\n  }\n\n  startPhaseCountdown() {\n    const delayPhase2 = this.durationPhase1 + this.delayBetweenPhases;\n\n    setTimeout(() => {\n      console.log(this.state.citizens)\n      const countWhite = this.state.citizens.filter(citizen => citizen.control && citizen.guilty && citizen.skinTone === 'white').length;\n      const countBlack = this.state.citizens.filter(citizen => citizen.control && citizen.guilty && citizen.skinTone === 'black').length;  \n\n      const totalGuilty = this.state.citizens.filter(citizen => citizen.control && citizen.guilty).length;\n\n      const percentageWhite = countWhite / totalGuilty * 100;\n      const percentageBlack = countBlack / totalGuilty * 100;\n\n      this.setState({ \n        duration: this.durationPhase2, \n        phase: 2,\n        percentageWhite,\n        percentageBlack,\n      });\n\n    }, delayPhase2);\n  }\n\n  generatePopulation() {\n    const population = [];\n    for (let index = 0; index < this.citizenAmount; index++) {\n      population.push(new Human({ index }));\n    }\n    this.setState({ citizens: population });\n  }\n\n  renderCitizens() {\n    const { citizens, duration, phase } = this.state;\n\n    let whiteCount = 0\n    let blackCount = 0\n\n    return (\n      citizens.map((citizen, i, arr) => {\n        // scenario 3\n        const previous = arr[i-1]\n\n        if (citizen.skinTone === 'white') {\n          var controlChance = () => Math.random() >= 0.8;\n          citizen.control = controlChance();\n        }\n        else if (previous === undefined && citizen.skinTone === 'black') {\n          controlChance = () => Math.random() >= 0.2;\n          citizen.control = controlChance();\n        }\n        else if (previous.skinTone === 'black' && citizen.skinTone === 'black') {\n          controlChance = () => Math.random() >= 0.1;\n          citizen.control = controlChance();\n        }\n        else if (previous.skinTone === 'white' && citizen.skinTone === 'black') {\n          controlChance = () => Math.random() >= 0.2;\n          citizen.control = controlChance();\n        }\n\n        whiteCount = citizen.skinTone === 'white' && citizen.control ? whiteCount + 1 : whiteCount\n        blackCount = citizen.skinTone === 'black' && citizen.control ? blackCount + 1 : blackCount\n        \n        return <Citizen\n          key={citizen.index}\n          index={citizen.index}\n          duration={duration}\n          phase={phase}\n          skinTone={citizen.skinTone}\n          guilty={citizen.guilty}\n          name={citizen.name}\n          count={citizen.skinTone === 'white' ? whiteCount : blackCount}\n          control={citizen.control}\n        />;\n      })\n    );\n  }\n\n  render() {\n    const { duration, phase, percentageBlack, percentageWhite, maxHeight, maxWidth } = this.state;\n    const citizens = this.renderCitizens();\n\n    const styles = {\n      svg: {\n        width: '100%',\n        height: '100%',\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        flex: 1,\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        alignItems: 'center',\n        margin: 0,\n        padding: '1rem',\n        boxSizing: 'border-box',\n      }\n    };\n\n    console.log(this.state);\n    return (\n      <svg style={styles.svg} viewBox='0 0 800 500'>\n        {citizens}\n        <Narrator phase={phase} duration={duration} />\n        <Titles phase={phase} duration={duration} />\n        <Bars phase={phase} duration={duration} percentageWhite={percentageWhite} percentageBlack={percentageBlack} />\n      </svg>\n    );\n  }\n}\n","import React from 'react';\nimport Simulation from '../Simulation'\n// import styles from './style';\n\nexport default class App extends React.PureComponent {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            startSim : false,\n            key: Math.random(),\n            top: null,\n            left: null,\n        }\n    }\n\ncomponentDidMount() {\n    this.setSize();\n}\n\nsetSize = () => {\n    if (window.innerWidth > 768) {\n        this.setState({top: '480px', left: '48%'})\n    }\n    else if (window.innerWidth < 768) {\n        this.setState({top: '250px', left: '42%'})\n    }\n}\n\n\nstartSimulation = () => {\n    this.setState({ startSim : true});\n};\n\nrefresh = () => {\n    this.setState({ key : Math.random()});\n};\n\nrender() {\n\n    const { startSim, key, top, left } = this.state;\n    const styles = {\n        button : {\n            display: 'inline-block',\n            border: 'none',\n            margin: '0',\n            textDecoration: 'none',\n            background: '#145594',\n            color: '#ffffff',\n            fontFamily: 'Poppins',\n            fontSize: '1rem',\n            textAlign: 'center',\n            position: 'absolute',\n            left: left,\n            top: top,\n        }\n    }\n\n    return(\n        <div>\n            {!startSim && <button onClick={() => this.startSimulation()}>Start</button>}\n            {startSim && <button className =\"refresh\" style={styles.button} onClick={() => this.refresh()}>Refresh</button>}\n            {startSim && <Simulation key={key} />}\n        </div>\n    )\n}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}